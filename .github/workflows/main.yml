name: CI
on: [push, pull_request]

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: [3.6, 3.7, 3.8, pypy3]
        exclude:
        # Looks like pypy on Windows is 32-bit, so don't test it since we
        # only work with 64-bit builds
        - os: windows-latest
          python-version: pypy3
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v1
        with:
          python-version: 3.8
      - run: python download-wasmtime.py
      - uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}
      - run: pip install pytest
      - run: pytest

  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        include:
        - os: ubuntu-latest
          plat: manylinux1-x86_64
        - os: macos-latest
          plat: macosx-10-13-x86_64
        - os: windows-latest
          plat: win-amd64
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-python@v1
      with:
        python-version: '3.x'
    - run: pip install setuptools wheel
    - run: python download-wasmtime.py
    - run: python setup.py bdist_wheel --plat-name ${{ matrix.plat }}
    - uses: actions/upload-artifact@v1
      with:
        name: wheel-${{ matrix.os }}
        path: dist

  flake8:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v1
        with:
          python-version: '3.x'
      - run: pip install flake8
      - run: flake8

  docs:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-python@v1
      with:
        python-version: '3.x'
    - run: pip install pdoc3
    - run: python download-wasmtime.py
    - run: pdoc --html wasmtime
    - uses: actions/upload-artifact@v1
      with:
        name: generated-docs
        path: html/wasmtime

  coverage:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-python@v1
      with:
        python-version: '3.x'
    - run: python download-wasmtime.py
    - run: pip install coverage pytest
    - run: coverage run -m pytest
    - run: coverage html
    - uses: actions/upload-artifact@v1
      with:
        name: coverage
        path: htmlcov

  upload_docs:
    needs: [coverage, docs]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: actions/download-artifact@v1
      with:
        name: coverage
    - uses: actions/download-artifact@v1
      with:
        name: generated-docs
    - run: find .
    - run: mv coverage generated-docs
    - name: Push to gh-pages
      run: curl -LsSf https://git.io/fhJ8n | rustc - && (cd generated-docs && ../rust_out)
      env:
        GITHUB_DEPLOY_KEY: ${{ secrets.DEPLOY_KEY }}
        BUILD_REPOSITORY_ID: ${{ github.repository }}
        BUILD_SOURCEVERSION: ${{ github.sha }}

  upload_wheels:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-python@v1
      with:
        python-version: '3.x'
    - run: pip install twine
    - uses: actions/download-artifact@v1
      with:
        name: wheel-ubuntu-latest
    - uses: actions/download-artifact@v1
      with:
        name: wheel-macos-latest
    - uses: actions/download-artifact@v1
      with:
        name: wheel-windows-latest
    - run: find .
    - run: twine upload -u alexcrichton --repository-url https://test.pypi.org/legacy/ wheel-*-latest/*
